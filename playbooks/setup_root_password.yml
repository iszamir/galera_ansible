---
- name: Setup MariaDB Root Password with User Prompt
  hosts: all
  become: false
  gather_facts: true  # Add this to ensure ansible_date_time is available
  vars_files:
    - ../group_vars/all.yml
  vars:
    local_user: "{{ lookup('env', 'USER') }}"
    ansible_dir: "{{ playbook_dir | dirname }}"
    credentials_path: "{{ lookup('env', 'HOME') }}/.mariadb"
  vars_prompt:
    - name: "user_mysql_password"  # Changed variable name to avoid confusion
      prompt: "Enter MariaDB root password"
      private: yes
      confirm: yes
  
  pre_tasks:
    - name: Ensure credentials directory exists
      delegate_to: localhost
      file:
        path: "{{ credentials_path }}"
        state: directory
        mode: '0700'
      run_once: true

    # First create the vault file with the prompted password
    - name: Create vault file
      delegate_to: localhost
      copy:
        content: |
          ---
          vault_mysql_root_password: "{{ user_mysql_password }}"  # Using the prompted password
        dest: "{{ ansible_dir }}/group_vars/vault.yml"
        mode: '0600'
      run_once: true

    # Then encrypt it
    - name: Encrypt vault file
      delegate_to: localhost
      shell: ansible-vault encrypt {{ ansible_dir }}/group_vars/vault.yml --vault-password-file={{ lookup('env', 'HOME') }}/.vault_pass
      run_once: true

    # Finally create the credentials file using user_mysql_password
    - name: Create password file
      delegate_to: localhost
      copy:
        content: |
          # MariaDB Root Password
          # Created: {{ ansible_date_time.iso8601 }}
          MYSQL_ROOT_PASSWORD={{ user_mysql_password }}
        dest: "{{ credentials_path }}/credentials"
        mode: '0600'
      run_once: true

  tasks:
    - name: Check MySQL configs
      become: true
      when: inventory_hostname == groups['all'][0]
      shell: |
        mv /etc/mysql/my.cnf /etc/mysql/my.cnf.bak || true
        mv /etc/mysql/mariadb.conf.d/50-server.cnf /etc/mysql/mariadb.conf.d/50-server.cnf.bak || true
      ignore_errors: true

    - name: Create minimal client config
      become: true
      when: inventory_hostname == groups['all'][0]
      copy:
        dest: /etc/mysql/my.cnf
        content: |
          [client]
          socket=/var/run/mysqld/mysqld.sock
          [mysqld]
          bind_address = 0.0.0.0  # Fixed hyphen to underscore
        mode: '0644'
      tags: config

    - name: Set root password using mysqladmin
      become: true
      when: inventory_hostname == groups['all'][0]
      shell: |
        mysqladmin -u root password "{{ user_mysql_password }}"
      ignore_errors: true

    - name: Set root permissions
      become: true
      when: inventory_hostname == groups['all'][0]
      shell: |
        mysql --protocol=socket -u root -p"{{ user_mysql_password }}" <<EOF
        GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPTION;
        GRANT ALL PRIVILEGES ON *.* TO 'root'@'127.0.0.1' IDENTIFIED BY '{{ user_mysql_password }}' WITH GRANT OPTION;
        FLUSH PRIVILEGES;
        EOF
      ignore_errors: true

    - name: Create .my.cnf for root
      become: true
      when: inventory_hostname == groups['all'][0]
      copy:
        dest: /root/.my.cnf
        content: |
          [client]
          user=root
          password={{ user_mysql_password }}
          socket=/var/run/mysqld/mysqld.sock
        mode: '0600'
        owner: root
        group: root

    - name: Restore original configs
      become: true
      when: inventory_hostname == groups['all'][0]
      shell: |
        if [ -f /etc/mysql/my.cnf.bak ]; then mv /etc/mysql/my.cnf.bak /etc/mysql/my.cnf; fi
        if [ -f /etc/mysql/mariadb.conf.d/50-server.cnf.bak ]; then mv /etc/mysql/mariadb.conf.d/50-server.cnf.bak /etc/mysql/mariadb.conf.d/50-server.cnf; fi
      ignore_errors: true

  post_tasks:
    - name: Display password file location
      delegate_to: localhost
      debug:
        msg: "Your MariaDB root password has been saved to ~/.mariadb/credentials"
      run_once: true